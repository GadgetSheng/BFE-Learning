import{_ as e,o,c,a as n,b as t,d as s,e as p,r as l}from"./app.fb35af60.js";const i={},u=n("h1",{id:"\u624B\u5199-apply-call-bind",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u624B\u5199-apply-call-bind","aria-hidden":"true"},"#"),s(" \u624B\u5199[ "),n("code",null,"apply"),s(" | "),n("code",null,"call"),s(" | "),n("code",null,"bind"),s(" ]")],-1),r={href:"https://github.com/jawil/blog/issues/16",target:"_blank",rel:"noopener noreferrer"},k=s("\u53C2\u8003blog1"),d=n("h2",{id:"\u624B\u5199apply",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u624B\u5199apply","aria-hidden":"true"},"#"),s(" \u624B\u5199apply")],-1),v=n("h3",{id:"apply\u539F\u7406",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#apply\u539F\u7406","aria-hidden":"true"},"#"),s(" apply\u539F\u7406")],-1),m={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/apply",target:"_blank",rel:"noopener noreferrer"},b=s("MDN/Function..apply"),y=p(`<div class="custom-container tip"><p class="custom-container-title">apply\u539F\u7406\u63CF\u8FF0</p><ol><li>\u6539\u53D8\u4E86<code>this</code>\u7684\u6307\u5411</li><li>\u51FD\u6570\u6267\u884C\u4E86</li><li>\u8FD8\u80FD\u7ED9\u5B9A<strong>\u53C2\u6570\u6570\u7EC4</strong>\u6765\u6267\u884C\u51FD\u6570</li><li>\u6709\u8FD4\u56DE\u503C</li><li>\u907F\u514D\u91CD\u590D\u5C5E\u6027 <code>object[Symbol()]</code></li></ol></div><h3 id="apply\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#apply\u5B9E\u73B0" aria-hidden="true">#</a> apply\u5B9E\u73B0</h3><details class="custom-container details"><summary>apply\u63D0\u793A1+2</summary><p>func.<code>apply</code>(context) \u548C\u4E0B\u9762\u4EE3\u7801\u7684\u529F\u80FD\u7C7B\u4F3C (\u5047\u8BBE<code>context</code>\u4E2D\u9884\u5148\u4E0D\u5B58\u5728\u540D\u4E3A<code>fn</code>\u7684\u5C5E\u6027)</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">apply1</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    context<span class="token punctuation">.</span>fn<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">;</span> <span class="token comment">// this\u4E3A\u8C03\u7528apply\u7684\u51FD\u6570(=func</span>
    context<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5148\u4E0D\u5904\u7406\u53C2\u6570</span>
    <span class="token keyword">delete</span> context<span class="token punctuation">.</span>fn<span class="token punctuation">;</span> <span class="token comment">// \u5220\u9664\u4E34\u65F6\u65B9\u6CD5</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="custom-container details"><summary>apply\u63D0\u793A3</summary><ul><li>\u4F20\u5165\u7684\u53C2\u6570\u5C31\u662F\u4E00\u4E2A\u6570\u7EC4</li><li>\u7B2C\u4E8C\u4E2A\u53C2\u6570\u5C31\u662F\u6570\u7EC4\u5BF9\u8C61</li><li>\u6267\u884C\u65F6\u8981\u628AArray\u4F20\u9012\u7ED9\u51FD\u6570\u5F53\u53C2\u6570\u7136\u540E\u6267\u884C</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// [1,2,3,4].toString() === &quot;1,2,3,4&quot;</span>
<span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">apply2</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    context<span class="token punctuation">.</span>fn<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> args<span class="token operator">=</span>arguments<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u7B2C\u4E8C\u4E2A\u53C2\u6570\u5C31\u662F\u53C2\u6570\u6570\u7EC4</span>
    <span class="token function">eval</span><span class="token punctuation">(</span><span class="token string">&#39;context.fn(&#39;</span><span class="token operator">+</span>args<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&#39;)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">delete</span> context<span class="token punctuation">.</span>fn<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><div class="custom-container warning"><p class="custom-container-title">apply\u63D0\u793A4</p><ul><li><code>this</code> \u53C2\u6570\u53EF\u4EE5\u4F20 <code>null</code> \u6216\u8005\u4E3A<code>undefined</code>,\u8FD9\u662F\u8D4B\u503C<code>window</code></li><li>\u51FD\u6570\u662F\u6709\u8FD4\u56DE\u503C\u7684</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">apply3</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">var</span> newThis<span class="token operator">=</span>context<span class="token operator">||</span>window<span class="token punctuation">;</span>
    <span class="token keyword">var</span> args<span class="token operator">=</span>arguments<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    newThis<span class="token punctuation">.</span>fn<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> result<span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>args <span class="token operator">===</span> <span class="token keyword">void</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        result<span class="token operator">=</span>newThis<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
        result<span class="token operator">=</span><span class="token function">eval</span><span class="token punctuation">(</span><span class="token string">&#39;newThis.fn(&#39;</span><span class="token operator">+</span>args<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&#39;)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8FD8\u662Feval\u5F3A\u5927</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">delete</span> newThis<span class="token punctuation">.</span>fn<span class="token punctuation">;</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><div class="custom-container danger"><p class="custom-container-title">\u89E3\u51B3\u9690\u60A3</p><p>\u4E00\u5F00\u59CB\u5C31\u57CB\u5751 \u5047\u8BBE\u4E86context\u5BF9\u8C61\u9884\u5148\u5C31<strong>\u4E0D\u5B58\u5728</strong>\u540D\u4E3Afn\u7684\u5C5E\u6027</p></div><details class="custom-container details"><summary>apply\u63D0\u793A5</summary><ul><li>\u60F3\u8981\u5B8C\u7F8E\uFF0C\u5C31\u9700\u8981\u4FDD\u8BC1fn\u7684\u552F\u4E00\u6027(ES6 <code>Symbol</code><sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>)</li><li>ES5 \u5C5E\u6027\u540D\u79F0\u53EA\u53EF\u80FD\u662F\u4E00\u4E2A\u5B57\u7B26\u4E32\uFF0C\u505A\u5230\u8FD9\u4E2A\u5B57\u7B26\u4E32\u4E0D\u53EF\u9884\u671F\uFF0C\u4E00\u4E2A\u968F\u673A\u6570\u57FA\u672C\u4E0A\u5C31\u89E3\u51B3\u4E86\u3002</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">genUniqueProp</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">var</span> prop<span class="token operator">=</span><span class="token string">&#39;_&#39;</span><span class="token operator">+</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span>prop<span class="token punctuation">)</span><span class="token operator">===</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">genUniqueProp</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> prop<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">apply4</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">var</span> newThis<span class="token operator">=</span>context<span class="token operator">||</span>window<span class="token punctuation">;</span>
    <span class="token keyword">var</span> args<span class="token operator">=</span>arguments<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> fn<span class="token operator">=</span><span class="token function">genUniqueProp</span><span class="token punctuation">(</span>newThis<span class="token punctuation">)</span><span class="token punctuation">;</span>
    newThis<span class="token punctuation">[</span>fn<span class="token punctuation">]</span><span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> result<span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>args <span class="token operator">===</span> <span class="token keyword">void</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        result<span class="token operator">=</span>newThis<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
        result<span class="token operator">=</span><span class="token function">eval</span><span class="token punctuation">(</span><span class="token string">&#39;newThis[fn](&#39;</span><span class="token operator">+</span>args<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&#39;)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8FD8\u662Feval\u5F3A\u5927</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">delete</span> newThis<span class="token punctuation">[</span>fn<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="apply\u6D4B\u8BD5" tabindex="-1"><a class="header-anchor" href="#apply\u6D4B\u8BD5" aria-hidden="true">#</a> apply\u6D4B\u8BD5</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> elements <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
array<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> elements<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&quot;a&quot;, &quot;b&quot;, 0, 1, 2]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u624B\u5199call" tabindex="-1"><a class="header-anchor" href="#\u624B\u5199call" aria-hidden="true">#</a> \u624B\u5199call</h2><h3 id="call\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#call\u539F\u7406" aria-hidden="true">#</a> call\u539F\u7406</h3>`,11),f={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/call",target:"_blank",rel:"noopener noreferrer"},h=s("MDN/Function..call"),w=p(`<div class="custom-container tip"><p class="custom-container-title">call\u539F\u7406\u63CF\u8FF0</p><ol><li>\u5141\u8BB8\u4E3A\u4E0D\u540C\u7684\u5BF9\u8C61\u5206\u914D\u548C\u8C03\u7528\u5C5E\u4E8E\u4E00\u4E2A\u5BF9\u8C61\u7684\u51FD\u6570/\u65B9\u6CD5\u3002</li><li>\u63D0\u4F9B\u65B0\u7684 this \u503C\u7ED9\u5F53\u524D\u8C03\u7528\u7684\u51FD\u6570/\u65B9\u6CD5\u3002</li><li>\u6709\u8FD4\u56DE\u503C</li><li>\u6307\u5B9A\u53C2\u6570\u5217\u8868\uFF0C\u975E\u5168\u4F53\u53C2\u6570\u7684\u6570\u7EC4<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></li></ol></div><h3 id="call\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#call\u5B9E\u73B0" aria-hidden="true">#</a> call\u5B9E\u73B0</h3><details class="custom-container details"><summary>\u5B9E\u73B0</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">call1</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">var</span> newThis <span class="token operator">=</span> context <span class="token operator">||</span> window<span class="token punctuation">;</span>
    <span class="token keyword">var</span> args <span class="token operator">=</span> arguments<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    newThis<span class="token punctuation">.</span>fn <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> args <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>arguments<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        args<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;arguments[&#39;</span><span class="token operator">+</span>i<span class="token operator">+</span><span class="token string">&#39;]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">var</span> result<span class="token operator">=</span><span class="token function">eval</span><span class="token punctuation">(</span><span class="token string">&#39;newThis[&quot;fn&quot;](&#39;</span><span class="token operator">+</span>args<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&#39;)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">delete</span> newThis<span class="token punctuation">.</span>fn<span class="token punctuation">;</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="call\u6D4B\u8BD5" tabindex="-1"><a class="header-anchor" href="#call\u6D4B\u8BD5" aria-hidden="true">#</a> call\u6D4B\u8BD5</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Product</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> price</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>price <span class="token operator">=</span> price<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">Food</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> price</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">Product</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> name<span class="token punctuation">,</span> price<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>category <span class="token operator">=</span> <span class="token string">&#39;food&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">Toy</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> price</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">Product</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> name<span class="token punctuation">,</span> price<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>category <span class="token operator">=</span> <span class="token string">&#39;toy&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">var</span> cheese <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Food</span><span class="token punctuation">(</span><span class="token string">&#39;feta&#39;</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> fun <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Toy</span><span class="token punctuation">(</span><span class="token string">&#39;robot&#39;</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u624B\u5199bind" tabindex="-1"><a class="header-anchor" href="#\u624B\u5199bind" aria-hidden="true">#</a> \u624B\u5199bind</h2><h3 id="bind\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#bind\u539F\u7406" aria-hidden="true">#</a> bind\u539F\u7406</h3>`,7),g={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/bind",target:"_blank",rel:"noopener noreferrer"},_=s("MDN/Function..bind"),x=p(`<div class="custom-container tip"><p class="custom-container-title">bind\u539F\u7406\u63CF\u8FF0</p><p>bind \u65B9\u6CD5\u7684 length \u5C5E\u6027\u662F 1\u3002 <code>Function.prototype.bind</code> \u521B\u5EFA\u7684\u51FD\u6570\u5BF9\u8C61\u4E0D\u5305\u542B <code>prototype</code> \u5C5E\u6027</p><ol><li>bind\u521B\u5EFA\u4E00\u4E2A\u65B0\u51FD\u6570</li><li>\u8C03\u7528\u65F6\u5019\uFF0Cthis\u503C\u662F\u4F20\u9012\u7ED9bind\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570</li><li>\u5B83\u7684\u53C2\u6570\u662Fbind\u7684\u5176\u4ED6\u53C2\u6570+ \u539F\u672C\u53C2\u6570</li><li>bind\u8FD4\u56DE\u7684\u7ED1\u5B9A\u51FD\u6570\u4E5F\u80FD\u4F7F\u7528new\u64CD\u4F5C\u7B26\u521B\u5EFA\u5BF9\u8C61(=\u628A\u539F\u51FD\u6570\u5F53\u6210constructor)</li><li>new\u7684\u60C5\u51B5\u4E0B\uFF0C\u63D0\u4F9B\u7684thisArg\u88AB\u5FFD\u7565\uFF0C\u540C\u65F6\u8C03\u7528\u65F6\u7684\u53C2\u6570\u88AB\u63D0\u4F9B\u7ED9\u5185\u90E8\u6A21\u62DF\u51FD\u6570</li></ol></div><h3 id="bind\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#bind\u5B9E\u73B0" aria-hidden="true">#</a> bind\u5B9E\u73B0</h3><p>core-js\u5B9E\u73B0<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup></p><details class="custom-container details"><summary>bind\u63D0\u793A1+2</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u7B80\u5355\u5B9E\u73B0</span>
<span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">bind1</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">var</span> target<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> args<span class="token operator">=</span><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">target</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span>args<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="custom-container details"><summary>bind\u63D0\u793A3</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// curring \u67EF\u91CC\u5316\u5B9E\u73B0</span>
<span class="token comment">// bind\u65B9\u6CD5\u8FD8\u53EF\u4EE5\u8FD9\u6837\u5199 fn.bind(obj, arg1)(arg2).</span>
<span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">bind2</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">var</span> target<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> args<span class="token operator">=</span><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">var</span> innerArgs<span class="token operator">=</span><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> combinedArgs<span class="token operator">=</span>args<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>innerArgs<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token function">target</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span>combinedArgs<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="custom-container details"><summary>bind\u63D0\u793A4+5</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u517C\u5BB9\u6784\u9020\u51FD\u6570</span>
<span class="token keyword">var</span> arraySlice <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>slice<span class="token punctuation">;</span>
<span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">bind3</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">thisArg</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token keyword">this</span> <span class="token operator">!==</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&#39;not a function&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> <span class="token constant">F</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> partArgs <span class="token operator">=</span> <span class="token function">arraySlice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> <span class="token function-variable function">bound</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> args <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>partArgs<span class="token punctuation">,</span> <span class="token function">arraySlice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token keyword">instanceof</span> <span class="token class-name">bound</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token constant">F</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span>
            <span class="token keyword">return</span> <span class="token constant">F</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token function">Object</span><span class="token punctuation">(</span>thisArg<span class="token punctuation">)</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">var</span> FPrototype <span class="token operator">=</span> <span class="token class-name">F</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> FPrototype <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">&amp;&amp;</span> FPrototype <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        bound<span class="token punctuation">.</span>prototype <span class="token operator">=</span> FPrototype<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> bound<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="bind\u6D4B\u8BD5" tabindex="-1"><a class="header-anchor" href="#bind\u6D4B\u8BD5" aria-hidden="true">#</a> bind\u6D4B\u8BD5</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Point</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> x<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> y<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token class-name">Point</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">toString</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">+</span> <span class="token string">&#39;,&#39;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>y<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Point</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
p<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;1,2&#39;</span>
<span class="token keyword">var</span> emptyObj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> YAxisPoint <span class="token operator">=</span> <span class="token function">Point</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>emptyObj<span class="token punctuation">,</span> <span class="token number">0</span><span class="token comment">/*x*/</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u672C\u9875\u4E0B\u65B9\u7684 polyfill \u4E0D\u652F\u6301\u8FD0\u884C\u8FD9\u884C\u4EE3\u7801\uFF0C</span>
<span class="token comment">// \u4F46\u4F7F\u7528\u539F\u751F\u7684 bind \u65B9\u6CD5\u8FD0\u884C\u662F\u6CA1\u95EE\u9898\u7684\uFF1A</span>
<span class="token keyword">var</span> YAxisPoint <span class="token operator">=</span> <span class="token function">Point</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token comment">/*x*/</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">/*\uFF08\u8BD1\u6CE8\uFF1Apolyfill \u7684 bind \u65B9\u6CD5\u4E2D\uFF0C\u5982\u679C\u628A bind \u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\u52A0\u4E0A\uFF0C
\u5373\u5BF9\u65B0\u7ED1\u5B9A\u7684 this \u6267\u884C Object(this)\uFF0C\u5305\u88C5\u4E3A\u5BF9\u8C61\uFF0C
\u56E0\u4E3A Object(null) \u662F {}\uFF0C\u6240\u4EE5\u4E5F\u53EF\u4EE5\u652F\u6301\uFF09*/</span>
<span class="token keyword">var</span> axisPoint <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">YAxisPoint</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
axisPoint<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;0,5&#39;</span>
axisPoint <span class="token keyword">instanceof</span> <span class="token class-name">Point</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
axisPoint <span class="token keyword">instanceof</span> <span class="token class-name">YAxisPoint</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
<span class="token keyword">new</span> <span class="token class-name">YAxisPoint</span><span class="token punctuation">(</span><span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">)</span> <span class="token keyword">instanceof</span> <span class="token class-name">Point</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr class="footnotes-sep">`,9),j={class:"footnotes"},P={class:"footnotes-list"},F=p('<li id="fn1" class="footnote-item"><p>\u6CE8\u610F\u70B9: <br><code>Symbol</code>\u503C\u4E0D\u80FD\u4E0E\u5176\u4ED6\u7C7B\u578B\u7684\u503C\u8FDB\u884C\u8FD0\u7B97\u3002<br><code>Symbol</code>\u503C\u4F5C\u4E3A\u5BF9\u8C61\u5C5E\u6027\u540D\u65F6\uFF0C\u4E0D\u80FD\u7528\u70B9\u8FD0\u7B97\u7B26\u3002 <a href="#fnref1" class="footnote-backref">\u21A9\uFE0E</a></p></li><li id="fn2" class="footnote-item"><p><code>call</code>\u4E0E<code>apply</code>\u7684\u552F\u4E00\u533A\u522B <a href="#fnref2" class="footnote-backref">\u21A9\uFE0E</a></p></li>',2),S={id:"fn3",class:"footnote-item"},A={href:"https://github.com/zloirock/core-js/blob/master/packages/core-js/internals/function-bind.js",target:"_blank",rel:"noopener noreferrer"},T=s("core-js/polyfill/bind"),q=s(),N=n("a",{href:"#fnref3",class:"footnote-backref"},"\u21A9\uFE0E",-1);function O(z,E){const a=l("ExternalLinkIcon");return o(),c("div",null,[u,n("p",null,[n("a",r,[k,t(a)])]),d,v,n("p",null,[n("a",m,[b,t(a)])]),y,n("p",null,[n("a",f,[h,t(a)])]),w,n("p",null,[n("a",g,[_,t(a)])]),x,n("section",j,[n("ol",P,[F,n("li",S,[n("p",null,[n("a",A,[T,t(a)]),q,N])])])])])}var C=e(i,[["render",O],["__file","handy1.html.vue"]]);export{C as default};

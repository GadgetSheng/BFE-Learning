import{_ as p,o,c as e,a as n,b as c,e as s,d as a,r as l}from"./app.fb35af60.js";const i={},u=s(`<h1 id="this\u6307\u9488-\u95ED\u5305-\u4F5C\u7528\u57DF" tabindex="-1"><a class="header-anchor" href="#this\u6307\u9488-\u95ED\u5305-\u4F5C\u7528\u57DF" aria-hidden="true">#</a> this\u6307\u9488/\u95ED\u5305/\u4F5C\u7528\u57DF</h1><h2 id="\u4F5C\u7528\u57DF" tabindex="-1"><a class="header-anchor" href="#\u4F5C\u7528\u57DF" aria-hidden="true">#</a> \u4F5C\u7528\u57DF</h2><h3 id="\u4F5C\u7528\u57DF\u94FE-\u513F\u5B50\u80FD\u7528\u7236\u4EB2\u7684\u4E1C\u897F" tabindex="-1"><a class="header-anchor" href="#\u4F5C\u7528\u57DF\u94FE-\u513F\u5B50\u80FD\u7528\u7236\u4EB2\u7684\u4E1C\u897F" aria-hidden="true">#</a> \u4F5C\u7528\u57DF\u94FE - \u513F\u5B50\u80FD\u7528\u7236\u4EB2\u7684\u4E1C\u897F</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> a<span class="token operator">=</span><span class="token string">&#39;gadget&#39;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
<span class="token keyword">function</span> <span class="token function">lesson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> b<span class="token operator">=</span> <span class="token string">&#39;sheng&#39;</span>
    <span class="token comment">// \u53D8\u91CF\u7684\u63D0\u5347</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>
    <span class="token function">teacher</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// \u51FD\u6570\u63D0\u5347 - \u63D0\u5347\u81F3\u5F53\u524D\u4F5C\u7528\u57DF\u6700\u521D\u59CB</span>
    <span class="token keyword">function</span> <span class="token function">teacher</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">let</span> c<span class="token operator">=</span><span class="token string">&#39;me&#39;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token function">lesson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// ********** **********</span>
<span class="token comment">// \u63D0\u5347\u7684\u4F18\u5148\u7EA7 -  \u53D8\u91CF\u4F18\u5148</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;piority&quot;</span><span class="token punctuation">,</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">item</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token operator">=</span><span class="token string">&#39;function&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
item<span class="token operator">=</span><span class="token string">&#39;variable&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// ********** **********</span>
<span class="token comment">// \u5757\u7EA7\u4F5C\u7528\u57DF</span>
<span class="token keyword">if</span>\uFF08<span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> d<span class="token operator">=</span><span class="token number">111</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> e<span class="token operator">=</span><span class="token number">222</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>d<span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// Uncaught SyntaxError: Invalid or unexpected token</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">,</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;e&#39;</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>\u5BF9\u4E8E\u4F5C\u7528\u57DF\u94FE\uFF0C\u6211\u4EEC\u76F4\u63A5\u901A\u8FC7\u521B\u5EFA\u6001\u6765\u5B9A\u4F4D\u4F5C\u7528\u57DF\u94FE</li><li>\u624B\u52A8\u53D6\u6D88\u5168\u5C40\uFF0C\u4F7F\u7528\u5757\u7EA7\u4F5C\u7528\u57DF</li></ol><h2 id="this-context" tabindex="-1"><a class="header-anchor" href="#this-context" aria-hidden="true">#</a> this - context</h2>`,6),k=a("\u53C2\u8003\u8D44\u6599:"),r={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/this",target:"_blank",rel:"noopener noreferrer"},d=a("MDN\u4E2Dthis"),v=s(`<p>this \u662F\u5728\u6267\u884C\u65F6\u52A8\u6001\u8BFB\u53D6\u4E0A\u4E0B\u6587\u51B3\u5B9A\u7684\uFF0C\u800C\u975E\u521B\u5EFA\u65F6</p><h3 id="\u5404\u4F7F\u7528\u6001\u4E2D\u7684\u6307\u9488\u6307\u5411" tabindex="-1"><a class="header-anchor" href="#\u5404\u4F7F\u7528\u6001\u4E2D\u7684\u6307\u9488\u6307\u5411" aria-hidden="true">#</a> \u5404\u4F7F\u7528\u6001\u4E2D\u7684\u6307\u9488\u6307\u5411</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u51FD\u6570\u5185\u90E8\u7684this&#39;</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// window</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9690\u5F0F\u7ED1\u5B9A-this\u6307\u5411\u7684\u662F\u8C03\u7528\u7684\u4E0A\u4E00\u7EA7-\u5B58\u5728\u4E8E\u5BF9\u8C61-\u6570\u7EC4\u7B49\u5F15\u7528\u5173\u7CFB\u903B\u8F91\u4E4B\u4E0A" tabindex="-1"><a class="header-anchor" href="#\u9690\u5F0F\u7ED1\u5B9A-this\u6307\u5411\u7684\u662F\u8C03\u7528\u7684\u4E0A\u4E00\u7EA7-\u5B58\u5728\u4E8E\u5BF9\u8C61-\u6570\u7EC4\u7B49\u5F15\u7528\u5173\u7CFB\u903B\u8F91\u4E4B\u4E0A" aria-hidden="true">#</a> \u9690\u5F0F\u7ED1\u5B9A - this\u6307\u5411\u7684\u662F\u8C03\u7528\u7684\u4E0A\u4E00\u7EA7 =&gt;\u5B58\u5728\u4E8E\u5BF9\u8C61/\u6570\u7EC4\u7B49\u5F15\u7528\u5173\u7CFB\u903B\u8F91\u4E4B\u4E0A</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u9690\u5F0F\u7ED1\u5B9A&#39;</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> obj<span class="token operator">=</span><span class="token punctuation">{</span>
    <span class="token literal-property property">a</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>
    fn
<span class="token punctuation">}</span>
obj<span class="token punctuation">.</span>fn<span class="token operator">=</span>fn<span class="token punctuation">;</span>
obj<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// **********</span>
<span class="token comment">// \u9762\u8BD5\u9898</span>
<span class="token keyword">const</span> foo<span class="token operator">=</span><span class="token punctuation">{</span>
    <span class="token literal-property property">bar</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
    <span class="token function-variable function">fn</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>bar<span class="token punctuation">)</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u53D6\u51FA</span>
<span class="token keyword">let</span> fn1<span class="token operator">=</span>foo<span class="token punctuation">.</span>fn<span class="token punctuation">;</span>
<span class="token function">fn1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// undefined window</span>

<span class="token comment">// \u8FFD\u95EE\uFF1A \u5982\u4F55\u6539\u53D8\u5C5E\u6027\u7684\u6307\u5411</span>
<span class="token keyword">const</span> o1<span class="token operator">=</span><span class="token punctuation">{</span>
    <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;o1&#39;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">fn</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>text<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> o2<span class="token operator">=</span><span class="token punctuation">{</span>
    <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;o2&#39;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">fn</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> o1<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> o3<span class="token operator">=</span><span class="token punctuation">{</span>
    <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;o3&#39;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">fn</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">// \u76F4\u63A5\u5185\u90E8\u6784\u9020 - \u63A5\u53E3\u4EBA</span>
        <span class="token keyword">let</span> fn<span class="token operator">=</span>o1<span class="token punctuation">.</span>fn<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;o1.fn&#39;</span><span class="token punctuation">,</span>o1<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// o1</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;o2.fn&#39;</span><span class="token punctuation">,</span>o2<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// o1</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;o3.fn&#39;</span><span class="token punctuation">,</span>o3<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// undefined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>\u5728\u6267\u884C\u51FD\u6570\u65F6\uFF0C\u51FD\u6570\u88AB\u4E0A\u4E00\u7EA7\u8C03\u7528\uFF0C\u53BB\u627E\u53D1\u8D77\u65B9</li><li>\u76F4\u63A5\u53D8\u6210\u516C\u5171\u6267\u884C\uFF0C\u6307\u5411\u5168\u5C40</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u8FFD\u95EE\uFF1Ao2.fn() \u8F93\u51FA o2</span>
<span class="token comment">// 1. \u4EBA\u4E3A\u5E72\u6D89 \u6539\u53D8this bind/call/apply</span>
o2<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>o2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 2. \u4E0D\u5E72\u6D89\uFF0C\u5B66\u4E60o1.fn\u80FD\u529B</span>
<span class="token keyword">const</span> o2<span class="token operator">=</span><span class="token punctuation">{</span>
    <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;o2&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">fn</span><span class="token operator">:</span> o1<span class="token punctuation">.</span>fn
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u663E\u793A\u7ED1\u5B9A" tabindex="-1"><a class="header-anchor" href="#\u663E\u793A\u7ED1\u5B9A" aria-hidden="true">#</a> \u663E\u793A\u7ED1\u5B9A</h3><p><code>bind | call | apply</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token function">foo</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">foo</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> bindFoo<span class="token operator">=</span><span class="token function">foo</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">bindFoo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u8FFD\u95EE\uFF1A call/apply/bind\u7684\u533A\u522B</li></ul><ol><li>call - apply \u4F20\u53C2\u4E0D\u540C \u4F9D\u6B21\u4F20\u5165/\u6570\u7EC4\u4F20\u5165</li><li>bind - call|apply \u8FD4\u56DE\u503C\u4E0D\u540C</li></ol><ul><li>\u8FFD\u95EE2: bind\u539F\u7406/\u624B\u5199</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 1. bind\u662FFunction\u539F\u578B\u4E0A\u7684\u65B9\u6CD5</span>
<span class="token comment">// 2. \u4F5C\u7528\uFF1A \u6539\u53D8\u4E0A\u4E0B\u6587 \u4F20\u5165 newThis + args</span>
<span class="token comment">// 3. \u8FD4\u56DE\u4E00\u4E2A\u53EF\u6267\u884C\u51FD\u6570 (newThis,args);</span>
<span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">myBind</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">var</span> that<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> args<span class="token operator">=</span>Array<span class="token punctuation">.</span>proptotype<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> newThis<span class="token operator">=</span>args<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">function</span> <span class="token function">ctor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">var</span> newArgs<span class="token operator">=</span>args<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> thisArg<span class="token operator">=</span> <span class="token keyword">this</span> <span class="token keyword">instanceof</span> <span class="token class-name">ctor</span> <span class="token operator">?</span> <span class="token keyword">this</span><span class="token operator">:</span>newThis<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token function">that</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>newThis<span class="token punctuation">,</span>newArgs<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    ctor<span class="token punctuation">.</span>prototype<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span>
    <span class="token keyword">return</span> ctor<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">myApply</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">context<span class="token punctuation">,</span>args</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// \u8FB9\u7F18\u68C0\u6D4B \u51FD\u6570</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token keyword">this</span> <span class="token operator">!==</span><span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;type error&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u53C2\u6570\u68C0\u6D4B</span>
    context<span class="token operator">=</span>context <span class="token operator">||</span> window<span class="token punctuation">;</span>
    context<span class="token punctuation">.</span>fn<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> result<span class="token operator">=</span>args
        <span class="token comment">// ? context.fn(...arguments[1])</span>
        <span class="token comment">// \u5229\u7528\u6570\u7EC4 toString\u7684\u7279\u6027</span>
        <span class="token operator">?</span> <span class="token function">eval</span><span class="token punctuation">(</span><span class="token string">&#39;context.fn(&#39;</span><span class="token operator">+</span>args<span class="token operator">+</span><span class="token string">&#39;)&#39;</span><span class="token punctuation">)</span> 
        <span class="token operator">:</span> context<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">delete</span> context<span class="token punctuation">.</span>fn<span class="token punctuation">;</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14);function m(b,f){const t=l("ExternalLinkIcon");return o(),e("div",null,[u,n("blockquote",null,[n("p",null,[k,n("a",r,[d,c(t)])])]),v])}var y=p(i,[["render",m],["__file","this.html.vue"]]);export{y as default};
